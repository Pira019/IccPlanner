<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="BAD_REQUEST" xml:space="preserve">
    <value>Mauvaise requête.</value>
  </data>
  <data name="CANNOT_CONTAIN_NULL" xml:space="preserve">
    <value>{PropertyName} ne doit contenir aucune valeur nulle.</value>
  </data>
  <data name="DATE" xml:space="preserve">
    <value>La date</value>
  </data>
  <data name="DEPARTMENT" xml:space="preserve">
    <value>Le département</value>
  </data>
  <data name="DEPARTMENT_" xml:space="preserve">
    <value>Départements</value>
  </data>
  <data name="DEPARTMENT_EXIST" xml:space="preserve">
    <value>Le département « {PropertyValue} » existe déjà.</value>
  </data>
  <data name="DEPARTMENT_INVALID_IDS" xml:space="preserve">
    <value>Un ou plusieurs identifiants de départements sont invalides.</value>
  </data>
  <data name="DEPARTMENT_NAME" xml:space="preserve">
    <value>Le nom du département</value>
  </data>
  <data name="DEPARTMENT_NOT_EXIST" xml:space="preserve">
    <value>Ce département n'existe pas.</value>
  </data>
  <data name="DESCRIPTION" xml:space="preserve">
    <value>La description</value>
  </data>
  <data name="ERROR_UNDEFINED" xml:space="preserve">
    <value>Erreur inconnue. Veuillez réessayer plus tard.</value>
  </data>
  <data name="EXIST" xml:space="preserve">
    <value>{PropertyName} « {PropertyValue} » existe déjà.</value>
  </data>
  <data name="FILE" xml:space="preserve">
    <value>Le fichier</value>
  </data>
  <data name="FILE_TOO_LARGE" xml:space="preserve">
    <value>Le fichier est trop volumineux, la taille maximale autorisée est de {0} Mo.</value>
  </data>
  <data name="FORBIDDEN_ACCESS" xml:space="preserve">
    <value>Accès interdit. Vous n'avez pas les permissions nécessaires pour accéder à cette ressource.</value>
  </data>
  <data name="INVALID_PRG_TYPE" xml:space="preserve">
    <value>Type de programme invalide. Les valeurs autorisées sont : Récurrent, Ponctuel.</value>
  </data>
  <data name="INVALID_ENTRY" xml:space="preserve">
    <value>{PropertyName} n’est pas valide.</value>
  </data>
  <data name="INVALID_FILE_DATA" xml:space="preserve">
    <value>Les données du fichier sont invalides. Vérifiez les colonnes et leur contenu.</value>
  </data>
  <data name="INVALID_FILE_EXTENSION" xml:space="preserve">
    <value>L'extension du fichier n'est pas autorisée.</value>
  </data>
  <data name="INVALID_FILE_FORMAT" xml:space="preserve">
    <value>Le fichier n'est pas un fichier Excel valide.</value>
  </data>
  <data name="INVALID_GENDER" xml:space="preserve">
    <value>Le sexe doit être H ou F</value>
  </data>
  <data name="INVALID_LOGIN_ATTEMPT" xml:space="preserve">
    <value>Le mot de passe ou l'e-mail est incorrect.</value>
  </data>
  <data name="INVALID_NAME" xml:space="preserve">
    <value>Le nom doit être composé uniquement de lettres.</value>
  </data>
  <data name="INVALID_ON" xml:space="preserve">
    <value>La ligne {0}</value>
  </data>
  <data name="INVALID_PHONE_NUMBER" xml:space="preserve">
    <value>Le numéro de téléphone doit être composé uniquement de chiffres. </value>
  </data>
  <data name="MAXLENGTH" xml:space="preserve">
    <value>{0} ne peut pas dépasser {1} caractères</value>
  </data>
  <data name="MAX_LENGTH" xml:space="preserve">
    <value>{PropertyName} ne doit pas dépasser {MaxLength} caractères</value>
  </data>
  <data name="MINISTRY" xml:space="preserve">
    <value>Ministère </value>
  </data>
  <data name="MINISTRY_NAME" xml:space="preserve">
    <value>Nom du ministère</value>
  </data>
  <data name="MISSING_REQUIRED_COLUMN" xml:space="preserve">
    <value>Les colonnes suivantes sont obligatoires : PRENOM, SEXE, CONTACT.</value>
  </data>
  <data name="MUST_CHOOSE" xml:space="preserve">
    <value>Veuillez sélectionner un ou plusieurs {PropertyName}.</value>
  </data>
  <data name="NAME" xml:space="preserve">
    <value>Nom</value>
  </data>
  <data name="NAME_EXISTS" xml:space="preserve">
    <value>{PropertyName} existe deja.</value>
  </data>
  <data name="NOT_NULL" xml:space="preserve">
    <value>{PropertyName} ne peut pas être nul.</value>
  </data>
  <data name="PROGRAM_NAME" xml:space="preserve">
    <value>Le nom de programme</value>
  </data>
  <data name="PROGRAM_TYPE" xml:space="preserve">
    <value>Le type de programme</value>
  </data>
  <data name="SHORT_NAME" xml:space="preserve">
    <value>Le nom court</value>
  </data>
  <data name="UNAUTHORIZED" xml:space="preserve">
    <value>Accès non autorisé.</value>
  </data>
  <data name="USER_IS_LOCKED_OUT" xml:space="preserve">
    <value>Compte utilisateur verrouillé. Réessayez dans quelques minutes.</value>
  </data>
  <data name="VAILID_DATE" xml:space="preserve">
    <value>{PropertyName} doit être valide et ne pas être dans le futur.</value>
  </data>
  <data name="VALIDATION_FAILED" xml:space="preserve">
    <value>Une ou plusieurs erreurs de validation sont survenues. Veuillez vérifier vos données et réessayer.</value>
  </data>
  <data name="DAYS" xml:space="preserve">
    <value>Les jours</value>
  </data>
  <data name="DAYS_REQUIRED" xml:space="preserve">
    <value>Un ou plusieurs jours sont requis lorsque le programme est récurrent.</value>
  </data>
  <data name="VALID_DAYS" xml:space="preserve">
    <value>Chaque jour doit être un jour valide de la semaine (ex. : Monday, Tuesday, etc.) lorsque le programme est récurrent. Veuillez entrer les jours en anglais.</value>
  </data>
  <data name="DATES_REQUIRED" xml:space="preserve">
    <value>La ou les dates sont requises lorsque le programme est ponctuel.</value>
  </data>
  <data name="INVALID_ENTRIES" xml:space="preserve">
    <value>{PropertyName} '{CollectionIndex}' est pas invalide.</value>
  </data>
  <data name="INVALID_DATE" xml:space="preserve">
    <value>Chaque date doit être dans un format valide (aaaa-MM-jj).</value>
  </data>
  <data name="MIN_VALUE" xml:space="preserve">
    <value>{PropertyName} doit être supérieur ou égal à {ComparisonValue}.</value>
  </data>
  <data name="NBR_SERVICE" xml:space="preserve">
    <value>Le nombre de services</value>
  </data>
  <data name="DEPARTMENT_PROGRAM_EXIST" xml:space="preserve">
    <value>Le département « {0} » a déjà un programme « {1} » de type « {2} ».</value>
  </data>
</root>